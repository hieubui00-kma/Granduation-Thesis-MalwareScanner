package com.kma.malwarescanner.core.data.util

import android.content.pm.PackageInfo
import android.content.pm.PackageManager
import android.content.pm.PackageManager.NameNotFoundException
import android.content.pm.PackageManager.PackageInfoFlags
import android.os.Build.VERSION.SDK_INT
import android.os.Build.VERSION_CODES

/**
 * Retrieve overall information about an application package that is
 * installed on the system.
 *
 * @param packageName The full name (i.e. com.google.apps.contacts) of the
 *            desired package.
 * @param flags Additional option flags to modify the data returned.
 * @return A PackageInfo object containing information about the package. If
 *         flag MATCH_UNINSTALLED_PACKAGES is set and if the package
 *         is not found in the list of installed applications, the package
 *         information is retrieved from the list of uninstalled
 *         applications (which includes installed applications as well as
 *         applications with data directory i.e. applications which had been
 *         deleted with DELETE_KEEP_DATA flag set).
 * @throws NameNotFoundException if no such package is available to the caller.
 */
@Throws(NameNotFoundException::class)
fun PackageManager.getPackageInfoCompat(packageName: String, flags: Int): PackageInfo? {
    return runCatching {
        when {
            SDK_INT >= VERSION_CODES.TIRAMISU -> {
                val infoFlags = PackageInfoFlags.of(flags.toLong())

                getPackageInfo(packageName, infoFlags)
            }
            else -> @Suppress("DEPRECATION") getPackageInfo(packageName, flags)
        }
    }.getOrNull()
}
