package com.kma.malwarescanner.core.data.repository

import com.kma.malwarescanner.core.data.local.source.TensorInputLocalDataSource
import com.kma.malwarescanner.core.data.remote.source.TensorInputRemoteDataSource
import javax.inject.Inject

class TensorInputRepository @Inject constructor(
    private val remoteDataSource: TensorInputRemoteDataSource,

    private val localDataSource: TensorInputLocalDataSource
) {

    suspend fun getTensorInput(tensorModelId: String): List<String> {
        val tensorInput = localDataSource.getTensorInput(tensorModelId = tensorModelId)

        if (tensorInput.isNotEmpty()) {
            return tensorInput.map { tensorInputEntity -> tensorInputEntity.name }
        }

        val input = remoteDataSource.getTensorModelInput(tensorModelId = tensorModelId)

        localDataSource.saveTensorInput(tensorModelId = tensorModelId, tensorInput = input)
        return input
    }

    suspend fun removeTensorInput(tensorModelId: String) {
        localDataSource.deleteTensorInput(tensorModelId = tensorModelId)
    }
}
