package com.kma.malwarescanner.core.data.local

import android.content.Context
import androidx.room.Database
import androidx.room.Room
import androidx.room.RoomDatabase
import com.kma.malwarescanner.core.data.local.dao.MalwareTypeDao
import com.kma.malwarescanner.core.data.local.dao.PermissionDao
import com.kma.malwarescanner.core.data.local.entity.MalwareTypeEntity
import com.kma.malwarescanner.core.data.local.entity.PermissionEntity

@Database(
    entities = [
        PermissionEntity::class,
        MalwareTypeEntity::class
    ],
    version = 1,
    exportSchema = false
)
abstract class MalwareScannerDatabase : RoomDatabase() {

    abstract fun getPermissionDao(): PermissionDao

    abstract fun getMalwareTypeDao(): MalwareTypeDao

    companion object {
        private lateinit var INSTANCE: MalwareScannerDatabase

        fun getInstance(context: Context): MalwareScannerDatabase {
            if (this::INSTANCE.isInitialized) return INSTANCE

            val klass = MalwareScannerDatabase::class.java

            INSTANCE = Room
                .databaseBuilder(context = context, klass = klass, name = "malwarescanner")
                .createFromAsset(databaseFilePath = "databases/malwarescanner.db")
                .build()
            return INSTANCE
        }
    }
}
