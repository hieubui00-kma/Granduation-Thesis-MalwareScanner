package com.kma.apktool

import net.dongliu.apk.parser.AbstractApkFile
import net.dongliu.apk.parser.bean.ApkSignStatus
import java.io.File
import java.nio.ByteBuffer
import java.nio.channels.FileChannel
import java.util.zip.ZipFile

class ApkFile : AbstractApkFile {
    private val zipFile: ZipFile by lazy { ZipFile(file) }

    private val fileChannel: FileChannel by lazy { file.inputStream().channel }

    private val file: File

    constructor(path: String) : super() {
        this.file = File(path)
    }

    constructor(file: File) : super() {
        this.file = file
    }

    override fun getAllCertificateData(): List<CertificateFile> {
        val certificateFiles = mutableListOf<CertificateFile>()
        val certificatePatterns = arrayOf(".RSA", ".DSA")
        val entries = zipFile.entries()

        while (entries.hasMoreElements()) {
            val entry = entries.nextElement()
                .takeUnless { entry -> entry.isDirectory }
                ?: continue
            val name = entry.name.uppercase()
            val isCertificate = certificatePatterns.any { pattern -> name.endsWith(suffix = pattern) }

            if (isCertificate) {
                val byteArray = zipFile
                    .getInputStream(entry)
                    .use { inputStream -> inputStream.readBytes() }

                certificateFiles += CertificateFile(name, byteArray)
            }
        }
        return certificateFiles
    }

    override fun getFileData(path: String?): ByteArray? {
        val entry = zipFile.getEntry(path) ?: return null

        return zipFile
            .getInputStream(entry)
            .use { inputStream -> inputStream.readBytes() }
    }

    override fun fileData(): ByteBuffer {
        return fileChannel.map(FileChannel.MapMode.READ_ONLY, 0, fileChannel.size())
    }

    @Deprecated(message = "Using google official ApkVerifier of apksig lib instead.")
    override fun verifyApk(): ApkSignStatus {
        return when {
            zipFile.getEntry(ENTRY_META_INF) == null -> ApkSignStatus.notSigned
            else -> ApkSignStatus.signed
        }
    }

    override fun close() {
        super.close()
        fileChannel.close()
        zipFile.close()
    }

    companion object {
        private const val ENTRY_META_INF = "META-INF/MANIFEST.MF"
    }
}
